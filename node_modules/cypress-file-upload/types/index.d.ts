declare namespace Cypress {
  type FixtureEncoding =
    | 'ascii'
    | 'base64'
    | 'binary'
    | 'hex'
    | 'latin1'
    | 'utf8'
    | 'utf-8'
    | 'ucs2'
    | 'ucs-2'
    | 'utf16le'
    | 'utf-16le';

  type FixtureData =
    | string
    | {
        filePath?: string;
        fileContent?: Blob;
        fileName?: string;
        encoding?: FixtureEncoding;
        mimeType?: string;
        lastModified?: number;
      };

  interface FileProcessingOptions {
    subjectType?: 'input' | 'drag-n-drop';
    force?: boolean;
    allowEmpty?: boolean;
  }

  /**
   * 定义了一个可以链式调用的接口，用于将文件或文件数组附加到指定的HTML元素上。
   * @template Subject - 附加文件的目标元素类型。
   */
  interface Chainable<Subject = any> {
    /**
     * 将文件或文件数组附加到指定的HTML元素上。
     * @param fixture - 要附加的文件或文件数组。
     * @param processingOpts - 一个可选的对象，用于影响文件处理的方式。
     * @returns - 返回一个链式可调用的对象，用于继续执行其他命令。
     */
    attachFile(fixture: FixtureData | FixtureData[], processingOpts?: FileProcessingOptions): Chainable<Subject>;
  }
}
